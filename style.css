
/* NOTE 1 */
/* The :root selector allows one to target the highest-level “parent” element in the DOM,
 or document tree. It is defined in the CSS Selectors Level 3 spec as a “structural pseudo-class”
 , meaning it is used to style content based on its relationship with parent and sibling content. */
/* ________________________________________________________________________________________________ */
/* NOTE 2 */
/*Syntax of the var() Function
The var() function is used to insert the value of a CSS variable.
The syntax of the var() function is as follows: 
 var(--name, value) where:
 Value	Description
 name   	Required. The variable name (must start with two dashes)
 value    Optional. The fallback value (used if the variable is not found)

 Note: The variable name must begin with two dashes (--) and it is case sensitive!
 
 How var() Works:
First of all: CSS variables can have a global or local scope.
Global variables can be accessed/used through the entire document, while local variables can be used
only inside the selector where it is declared.To create a variable with global scope, declare it inside
the :root selector. The :root selector matches the document's root element.To create a variable with
local scope, declare it inside the selector that is going to use it.
_______________________________________________________________________________________________________*/
/* NOTE 3 */
/* Meaning of :: before and :: after */
/* The CSS ::before selector inserts content before a selected element. CSS :after inserts content after 
a specified element. These selectors are commonly used to add text before or after a paragraph
or a link. ... That's where the CSS ::before and ::after pseudo-elements come in.
_______________________________________________________________________________________________________ */
/* NOTE 3 */
/* * in CSS means:
It selects all elements.
* in css is Universal selector
It selects everything in the page
when we say everything it means everything individually.
Examples :
div * -> will select anything which is inside any div , (from basic css we know not only direct children but
everything which have div somewhere as their ancestor)
* div -> any div which is children of anything .. not much of use as all div will be children of body and html
___________________________________________________________________________________________________________ */

:root {
  --color-white: #f3f3f3;
  --color-darkblue: #1b1b32;
  --color-lightgreen-alpha: rgba(106, 160, 122, 0.8);
  --color-green: #37af65;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  font-family:Arial, Helvetica, sans-serif;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.4;
  color: var(--color-white);
  margin: 0;
}

/* mobile friendly alternative to using background-attachment: fixed */
body::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: -1;
  background: var(--color-darkblue);
  background-image: linear-gradient(
      115deg,
      rgba(58, 58, 158, 0.8),
      rgba(136, 136, 206, 0.7)
    ),
    url(Images/drive-5079720_960_720.jpg);
    
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

h1 {
  font-weight: 400;
  line-height: 1.2;
}

p {
  font-size: 1.125rem;
}

h1,
p {
  margin-top: 0;
  margin-bottom: 0.5rem;
}

label {
  display: flex;
  align-items: center;
  font-size: 1.125rem;
  margin-bottom: 0.5rem;
}

input,
button,
select,
textarea {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

button {
  border: none;
}

.container {
  width: 100%;
  margin: 3.125rem auto 0 auto;
}

@media (min-width: 576px) {
  .container {
    max-width: 540px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 720px;
  }
}

.header {
  padding: 0 0.625rem;
  margin-bottom: 1.875rem;
}

.description {
  font-style: italic;
  font-weight: 200;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.4);
}

.clue {
  margin-left: 0.25rem;
  font-size: 0.9rem;
  color: #e4e4e4;
}

.text-center {
  text-align: center;
}

/* form */

form {
  background: var(--color-lightgreen-alpha);
  padding: 2.5rem 0.625rem;
  border-radius: 0.25rem;
}

@media (min-width: 480px) {
  form {
    padding: 2.5rem;
  }
}

.form-group {
  margin: 0 auto 1.25rem auto;
  padding: 0.25rem;
}

.form-control {
  display: block;
  width: 100%;
  height: 2.375rem;
  padding: 0.375rem 0.75rem;
  color: #495057;
  background-color: #fff;
  background-clip: padding-box;
  border: 1px solid #ced4da;
  border-radius: 0.25rem;
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

.form-control:focus {
  border-color: #80bdff;
  outline: 0;
  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}

.input-radio,
.input-checkbox {
  display: inline-block;
  margin-right: 0.625rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
}

.input-textarea {
  min-height: 120px;
  width: 100%;
  padding: 0.625rem;
  resize: vertical;
}

.submit-button {
  display: block;
  width: 100%;
  padding: 0.75rem;
  background-color: rgb(94, 94, 226);
  color: inherit;
  border-radius: 2px;
  cursor: pointer;
}
